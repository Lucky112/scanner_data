//@version=4
study(title="ScannerData5", shorttitle="_SD5_")

// study("Aroon")
Aroon_length = (14)
plot(100 * (highestbars(high, Aroon_length+1) + Aroon_length)/Aroon_length, title="Aroon.Up")
plot(100 * (lowestbars(low, Aroon_length+1) + Aroon_length)/Aroon_length, title="Aroon.Down")

// value traded (dollar volume)
plot(volume*close*syminfo.pointvalue, title="Value.Traded")

// study("My Keltner Channels", overlay=true)
lengthKltChnl = 20
multKltChnl = 1
maKltChnl = ema(close, lengthKltChnl)
rangemaKltChnl = rma(tr(true), lengthKltChnl)
plot(maKltChnl + rangemaKltChnl * multKltChnl, title = "KltChnl.upper")
plot(maKltChnl - rangemaKltChnl * multKltChnl, title = "KltChnl.lower")

// study("My Parabolic SAR", overlay=true)
PSAR=sar(0.02, 0.02, 0.2)
plot(PSAR, title = "P.SAR")

// study("My Money Flow")
lenMF = 14
posMF = sum(iff(hlc3 > hlc3[1], hlc3 * volume, 0), lenMF)
negMF = sum(iff(hlc3 < hlc3[1], hlc3 * volume, 0), lenMF)
plot( rsi(posMF, negMF), title = "MoneyFlow" )

// study("My Chaikin Money Flow")
lenCMF = 20
accdistRaw = not ( ((close == low) and (close == high)) or (high == low) ) ? (((close - low) - (high - close)) / (high - low)) * volume : 0
plot( sum(accdistRaw, lenCMF) / sum(volume, lenCMF), title = "ChaikinMoneyFlow" )


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Stochastic RSI
StochRSI()=>
    rsi1 = rsi(close, 14)
    K = sma(stoch(rsi1, rsi1, rsi1, 14), 3)
    D = sma(K, 3)
    [K, D]

[Stoch_RSI_K, Stoch_RSI_D] = StochRSI()
plot(Stoch_RSI_K, title="Stoch.RSI.K")
plot(Stoch_RSI_D, title="Stoch.RSI.D")


// Williams Percent Range
WR_period = 14
WR = (highest(high,WR_period)-close)/(highest(high,WR_period)-lowest(low,WR_period)) * -100
plot(WR, title="W.R")


// Rate Of Change (ROC)
plot(roc(close,9), title="ROC")


// Bull / Bear Power
BullPower = high - ema(close, 13)
BearPower = low - ema(close, 13)
plot(BullPower + BearPower, title="BBPower")


// Ultimate Oscillator
tl()=> close[1] < low ? close[1]: low
uo(ShortLen, MiddlLen, LongLen) =>
    Value1 = sum( tr, ShortLen )
    Value2 = sum( tr, MiddlLen )
    Value3 = sum( tr, LongLen )
    Value4 = sum( close - tl(), ShortLen )
    Value5 = sum( close - tl(), MiddlLen )
    Value6 = sum( close - tl(), LongLen )
    UO = float(na)
    if Value1 != 0 and Value2 != 0 and Value3 != 0
    	var0 = LongLen / ShortLen
    	var1 = LongLen / MiddlLen
    	Value7 = ( Value4 / Value1 ) * ( var0 )
    	Value8 = ( Value5 / Value2 ) * ( var1 )
    	Value9 = ( Value6 / Value3 )
    	UO := ( Value7 + Value8 + Value9 ) / ( var0 + var1 + 1 )
    UO
UO = uo(7,14,28)
if not na(UO)
    UO := UO * 100
plot(UO, title="UO")


// Ichimoku Cloud
donchian(len) => avg(lowest(len), highest(len))
ichimoku_cloud()=>
    conversionLine = donchian(9)
    baseLine = donchian(26)
    leadLine1 = avg(conversionLine, baseLine)
    leadLine2 = donchian(52)
    [conversionLine, baseLine, leadLine1, leadLine2]
[IC_CLine, IC_BLine, IC_Lead1, IC_Lead2] = ichimoku_cloud()
IC_displacement = 25
plot(IC_CLine, title="Ichimoku.CLine")
plot(IC_BLine, title="Ichimoku.BLine")
plot(IC_Lead1[IC_displacement], offset = IC_displacement, title="Ichimoku.Lead1")
plot(IC_Lead2[IC_displacement], offset = IC_displacement, title="Ichimoku.Lead2")


// Volume Weighted Moving Average (VWMA)
VWMA = vwma(close, 20)
plot(VWMA, title="VWMA")


// Average Day Range
plot(sma(high, 14) - sma(low, 14), title="ADR")
